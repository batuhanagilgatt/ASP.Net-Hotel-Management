@model HotelManagement.ViewModel.RoomViewModel
@{
    ViewBag.Title = "Index";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script type="text/javascript">

    $(document).ready(function () {

        $("#btnSave").click(function () {
            SaveRoomData();
        })
    });

    function SaveRoomData() {
        var formData = new FormData;
        formData.append("RoomNumber", $("#txtRoomNumber").val());
        formData.append("RoomPrice", $("#txtRoomPrice").val());
        formData.append("BookingStatusId", $("#ddBookingStatus").val());
        formData.append("RoomTypeId", $("#ddRoomType").val());
        formData.append("RoomCapacity", $("#txtRoomCapacity").val());
        formData.append("RoomDescription", $("#txtRoomDescription").val());
        //formData.append("Image", $("#UploadImage").get(0).files[0]);

        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function data() {
                if (data.success === true) {
                    alert(data.message);
                }
            },
            error: function () {
                alert('Oda oluşturulamadı')
            }
        });
    }

    function ResetRoomInformation() {
        $("#txtRoomNumber").val('');
        $("#txtRoomPrice").val('');
        $("#ddBookingStatus").val('1');
        $("#ddRoomType").val('1');
        $("#txtRoomCapacity").val('');
        $("#UploadImage").val('');
        $("#txtRoomNumber").focus();

    }
   

    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var fileReader = new FileReader;
            fileReader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }

            fileReader.readAsDataURL(result.files[0]); // hata

        }
    }
</script>
<div>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divAddRoom" data-backdrop="static" data-keyboard="false">Add Room</button>
</div>

<div Id="divAddRoom" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Room</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoomNumber)
                        @Html.TextBoxFor(model => model.RoomNumber, new { @class = "form-control", id = "txtRoomNumber" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RoomPrice)
                        @Html.TextBoxFor(model => model.RoomPrice, new { @class = "form-control", id = "txtRoomPrice" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.BookingStatusId)
                        @Html.DropDownListFor(model => model.BookingStatusId, @Model.ListOfBookingStatus, new { @class = "form-control", id = "ddBookingStatus" })
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.RoomTypeId)
                        @Html.DropDownListFor(model => model.RoomTypeId, @Model.ListOfRoomType, new { @class = "form-control", id = "ddRoomType" })
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.RoomCapacity)
                        @Html.TextBoxFor(model => model.RoomCapacity, new { @class = "form-control", id = "txtRoomCapacity" })
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.RoomDescription)
                        @Html.TextBoxFor(model => model.RoomDescription, new { @class = "form-control", id = "txtRoomDescription" })
                    </div>

                    @*<div class="form-group ">
                        @Html.LabelFor(model => model.RoomImage)
                        <input id="UploadImage" type="file" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)" />
                        <img id="imgRoom" height="100" width="100" style="border:solid" />
                    </div>*@

                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Save</button> &nbsp;
                <button type="button" data-dismiss="modal" class="btn-danger">Close</button> &nbsp;

            </div>

        </div>
    </div>
</div>
